#!/bin/sh
HOST={{ gitlab["access_token"]["host"] }}
USER={{ gitlab["access_token"]["user"] }}
PASSWORD={{ gitlab["access_token"]["password"] }}
USER_ID={{ gitlab["access_token"]["user_id"] }}
SSH_KEY_TITLE={{ gitlab["access_token"]["ssh_key_title"] }}
SSH_KEY=$(cat {{ gitlab["access_token"]["ssh_key_path"] }})

{# curl for the login page to get a session cookie and the sources with the auth tokens #}
body_header=$(curl -c cookies.txt -i "${HOST}/users/sign_in" -s)

# grep the auth token for the user login
csrf_token=$(
  echo $body_header | \
  perl -ne 'print "$1\n" if /new_user.*?authenticity_token"[[:blank:]]value="(.+?)"/' | \
  sed -n 1p
)

{# send login credentials with curl, using cookies and token from previous request #}
curl -b cookies.txt -c cookies.txt -i "${HOST}/users/sign_in" \
  --data "user[login]=${USER}&user[password]=${PASSWORD}" \
  --data-urlencode "authenticity_token=${csrf_token}"

{# send curl GET request to personal access token page to get auth token #}
body_header=$(curl -H "user-agent: curl" -b cookies.txt -i "${HOST}/profile/personal_access_tokens" -s)
csrf_token=$(
  echo $body_header | \
  perl -ne 'print "$1\n" if /authenticity_token"[[:blank:]]value="(.+?)"/' | \
  sed -n 1p
)

{# curl POST request to send the "generate personal access token form" #}
{# the response will be a redirect, so we have to follow using `-L` #}
body_header=$(
  curl -L -b cookies.txt "${HOST}/profile/personal_access_tokens" \
    --data-urlencode "authenticity_token=${csrf_token}" \
    --data "personal_access_token[name]=golab-generated&personal_access_token[expires_at]=&personal_access_token[scopes][]=api"
)

{# Scrape the personal access token from the response HTML #}
ACCESS_TOKEN=$(
  echo $body_header | \
  perl -ne 'print "$1\n" if /created-personal-access-token"[[:blank:]]value="(.+?)"/' | \
  sed -n 1p
)

{# Write access token to a file so it can be used in other tasks #}
echo $ACCESS_TOKEN > {{ gitlab_access_token_path }}

status_code=$(
  curl -s -o /dev/null -w "%{http_code}" \
    --location --request POST "${HOST}/api/v4/users/${USER_ID}/keys" \
    --header "PRIVATE-TOKEN: ${ACCESS_TOKEN}" \
    --form "title=${SSH_KEY_TITLE}" \
    --form "key=${SSH_KEY}"
)

[[ $status_code -eq 201 ]] && exit 0 || exit 1
